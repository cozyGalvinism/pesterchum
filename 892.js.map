{"version":3,"sources":["webpack://pesterchum/./node_modules/irc-framework/dist/browser/src/commands/command.js","webpack://pesterchum/./node_modules/irc-framework/dist/browser/src/commands/handler.js","webpack://pesterchum/./node_modules/irc-framework/dist/browser/src/commands/handlers/channel.js","webpack://pesterchum/./node_modules/irc-framework/dist/browser/src/commands/handlers/generics.js","webpack://pesterchum/./node_modules/irc-framework/dist/browser/src/commands/handlers/messaging.js","webpack://pesterchum/./node_modules/irc-framework/dist/browser/src/commands/handlers/misc.js","webpack://pesterchum/./node_modules/irc-framework/dist/browser/src/commands/handlers/registration.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","require","_","clone","numberRegex","module","exports","IrcCommand","command","data","instance","Constructor","TypeError","_classCallCheck","this","params","tags","prefix","nick","ident","hostname","protoProps","value","tag_name","toLowerCase","timeTag","getTag","time","Date","parse","undefined","test","getTime","prototype","_typeof","obj","Symbol","iterator","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_getPrototypeOf","getPrototypeOf","reduce","find","uniq","EventEmitter","irc_numerics","_EventEmitter","subClass","superClass","create","_inherits","IrcCommandHandler","Derived","hasNativeReflectConstruct","_super","Reflect","construct","sham","Proxy","toString","e","_isNativeReflectConstruct","result","Super","NewTarget","arguments","apply","connection","network_info","_this","addAllEventName","network","handlers","request_extra_caps","resetCache","message","irc_command","toUpperCase","batch_id","cache_key","hasCache","cache","commands","push","executeCommand","command_name","emitUnknownCommand","cap","concat","handler","emit","original_emit","args","Array","slice","mode_string","mode_params","j","add","chanmodes","options","CHANMODES","prefixes","PREFIX","always_param","modes","list","mode","split","hasParam","isAdd","matchMode","m","param","id","cacheToDestroy","idInCache","_caches","hasOwnProperty","each","Helpers","RPL_CHANNELMODEIS","channel","raw_modes","raw_params","parseModeList","RPL_CREATIONTIME","created_at","parseInt","RPL_CHANNEL_URL","url","RPL_NAMEREPLY","members","member","user","symbol","substring","parseMask","host","RPL_ENDOFNAMES","users","destroy","RPL_INVITELIST","invites","invited","invited_by","invited_at","RPL_ENDOFINVITELIST","RPL_BANLIST","bans","banned","banned_by","banned_at","RPL_ENDOFBANLIST","RPL_TOPIC","topic","RPL_NOTOPIC","RPL_TOPICWHOTIME","parsed","when","JOIN","gecos_idx","isEnabled","account","gecos","getServerTime","PART","KICK","kicked","QUIT","TOPIC","INVITE","RPL_INVITING","command_controller","handler_command","addHandler","generics","ERROR","event","error","reason","ERR_PASSWDMISMATCH","ERR_LINKCHANNEL","from","to","ERR_NOSUCHNICK","ERR_CANNOTSENDTOCHAN","ERR_TOOMANYCHANNELS","ERR_USERNOTINCHANNEL","ERR_NOTONCHANNEL","ERR_USERONCHANNEL","ERR_CHANNELISFULL","ERR_INVITEONLYCHAN","ERR_BANNEDFROMCHAN","ERR_BADCHANNELKEY","ERR_CHANOPRIVSNEEDED","ERR_UNKNOWNCOMMAND","generic_keys","keys","forEach","generic_command","generic","val","event_obj","event_keys","extractTargetGroup","target_group","util","NOTICE","charAt","type","parsed_target","from_server","group","PRIVMSG","ctcp_command","version","write","format","TAGMSG","RPL_WALLOPS","map","RPL_LISTSTART","getChanListCache","channels","RPL_LISTEND","RPL_LIST","num_users","RPL_MOTD","motd","RPL_MOTDSTART","RPL_ENDOFMOTD","ERR_NOMOTD","shift","RPL_WHOREPLY","is_away","chan_prefixes","filter","f","indexOf","chan_modes","hops_away","realname","space_idx","substr","server","real_name","away","num_hops_away","channel_modes","RPL_WHOSPCRPL","op_level","RPL_ENDOFWHO","PING","PONG","addServerTimeOffset","MODE","RPL_LINKS","links","address","access_via","hops","description","splice","join","RPL_ENDOFLINKS","RPL_INFO","info","RPL_ENDOFINFO","RPL_HELPSTART","help","RPL_HELPTXT","RPL_ENDOFHELP","BATCH","batch_start","_cache","emit_obj","c","intersection","difference","RPL_WELCOME","negotiating","now","RPL_YOURHOST","match","ircd","RPL_ISUPPORT","option","matches","splitOnce","exec","CHANTYPES","STATUSMSG","name","enabled","CAP","request_caps","capability_values","capabilities","replace","sep","cap_name","cap_value","want","getSaslAuth","sasl_mechanism","enable_chghost","enable_setname","enable_echomessage","requested","AUTHENTICATE","saslAuth","auth_str","password","b64","Buffer","RPL_LOGGEDIN","mask","RPL_LOGGEDOUT","RPL_SASLLOGGEDIN","ERR_SASLNOTAUTHORISED","ERR_SASLABORTED","ERR_SASLALREADYAUTHED"],"mappings":"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","file":"892.js","sourcesContent":["'use strict';\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _ = {\n  clone: require('lodash/clone')\n};\nvar numberRegex = /^[0-9.]{1,}$/;\n\nmodule.exports = /*#__PURE__*/function () {\n  function IrcCommand(command, data) {\n    _classCallCheck(this, IrcCommand);\n\n    this.command = command += '';\n    this.params = _.clone(data.params);\n    this.tags = _.clone(data.tags);\n    this.prefix = data.prefix;\n    this.nick = data.nick;\n    this.ident = data.ident;\n    this.hostname = data.hostname;\n  }\n\n  _createClass(IrcCommand, [{\n    key: \"getTag\",\n    value: function getTag(tag_name) {\n      return this.tags[tag_name.toLowerCase()];\n    }\n  }, {\n    key: \"getServerTime\",\n    value: function getServerTime() {\n      var timeTag = this.getTag('time'); // Explicitly return undefined if theres no time\n      // or the value is an empty string\n\n      if (!timeTag) {\n        return undefined;\n      } // If parsing fails for some odd reason, also fallback to\n      // undefined, instead of returning NaN\n\n\n      var time = Date.parse(timeTag) || undefined; // Support for znc.in/server-time unix timestamps\n\n      if (!time && numberRegex.test(timeTag)) {\n        return new Date(timeTag * 1000).getTime();\n      }\n\n      return time;\n    }\n  }]);\n\n  return IrcCommand;\n}();","'use strict';\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.object.create\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.reflect.construct\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar _ = {\n  reduce: require('lodash/reduce'),\n  find: require('lodash/find'),\n  uniq: require('lodash/uniq')\n};\n\nvar EventEmitter = require('eventemitter3');\n\nvar irc_numerics = require('./numerics');\n\nvar IrcCommand = require('./command');\n\nmodule.exports = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(IrcCommandHandler, _EventEmitter);\n\n  var _super = _createSuper(IrcCommandHandler);\n\n  function IrcCommandHandler(connection, network_info) {\n    var _this;\n\n    _classCallCheck(this, IrcCommandHandler);\n\n    _this = _super.call(this); // Adds an 'all' event to .emit()\n\n    _this.addAllEventName();\n\n    _this.connection = connection;\n    _this.network = network_info;\n    _this.handlers = [];\n    _this.request_extra_caps = [];\n\n    _this.resetCache();\n\n    require('./handlers/registration')(_assertThisInitialized(_this));\n\n    require('./handlers/channel')(_assertThisInitialized(_this));\n\n    require('./handlers/user')(_assertThisInitialized(_this));\n\n    require('./handlers/messaging')(_assertThisInitialized(_this));\n\n    require('./handlers/misc')(_assertThisInitialized(_this));\n\n    require('./handlers/generics')(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(IrcCommandHandler, [{\n    key: \"dispatch\",\n    value: function dispatch(message) {\n      var irc_command = new IrcCommand(message.command.toUpperCase(), message); // Batched commands will be collected and executed as a transaction\n\n      var batch_id = irc_command.getTag('batch');\n\n      if (batch_id) {\n        var cache_key = 'batch.' + batch_id;\n\n        if (this.hasCache(cache_key)) {\n          var cache = this.cache(cache_key);\n          cache.commands.push(irc_command);\n        } else {// If we don't have this batch ID in cache, it either means that the\n          // server hasn't sent the starting batch command or that the server\n          // has already sent the end batch command.\n        }\n      } else {\n        this.executeCommand(irc_command);\n      }\n    }\n  }, {\n    key: \"executeCommand\",\n    value: function executeCommand(irc_command) {\n      var command_name = irc_command.command; // Check if we have a numeric->command name- mapping for this command\n\n      if (irc_numerics[irc_command.command.toUpperCase()]) {\n        command_name = irc_numerics[irc_command.command.toUpperCase()];\n      }\n\n      if (this.handlers[command_name]) {\n        this.handlers[command_name](irc_command, this);\n      } else {\n        this.emitUnknownCommand(irc_command);\n      }\n    }\n  }, {\n    key: \"requestExtraCaps\",\n    value: function requestExtraCaps(cap) {\n      this.request_extra_caps = _.uniq(this.request_extra_caps.concat(cap));\n    }\n  }, {\n    key: \"addHandler\",\n    value: function addHandler(command, handler) {\n      if (typeof handler !== 'function') {\n        return false;\n      }\n\n      this.handlers[command] = handler;\n    }\n  }, {\n    key: \"emitUnknownCommand\",\n    value: function emitUnknownCommand(command) {\n      this.emit('unknown command', command);\n    } // Adds an 'all' event to .emit()\n\n  }, {\n    key: \"addAllEventName\",\n    value: function addAllEventName() {\n      var original_emit = this.emit;\n\n      this.emit = function () {\n        var args = Array.prototype.slice.call(arguments, 0);\n        original_emit.apply(this, ['all'].concat(args));\n        original_emit.apply(this, args);\n      };\n    }\n    /**\n    * Convert a mode string such as '+k pass', or '-i' to a readable\n    * format.\n    * [ { mode: '+k', param: 'pass' } ]\n    * [ { mode: '-i', param: null } ]\n    */\n\n  }, {\n    key: \"parseModeList\",\n    value: function parseModeList(mode_string, mode_params) {\n      var chanmodes = this.network.options.CHANMODES || [];\n      var prefixes = this.network.options.PREFIX || [];\n      var always_param = (chanmodes[0] || '').concat(chanmodes[1] || '');\n      var modes = [];\n      var i;\n      var j;\n      var add;\n\n      if (!mode_string) {\n        return modes;\n      }\n\n      prefixes = _.reduce(prefixes, function (list, prefix) {\n        list.push(prefix.mode);\n        return list;\n      }, []);\n      always_param = always_param.split('').concat(prefixes);\n\n      var hasParam = function hasParam(mode, isAdd) {\n        var matchMode = function matchMode(m) {\n          return m === mode;\n        };\n\n        if (_.find(always_param, matchMode)) {\n          return true;\n        }\n\n        if (isAdd && _.find((chanmodes[2] || '').split(''), matchMode)) {\n          return true;\n        }\n\n        return false;\n      };\n\n      j = 0;\n\n      for (i = 0; i < mode_string.length; i++) {\n        switch (mode_string[i]) {\n          case '+':\n            add = true;\n            break;\n\n          case '-':\n            add = false;\n            break;\n\n          default:\n            if (hasParam(mode_string[i], add)) {\n              modes.push({\n                mode: (add ? '+' : '-') + mode_string[i],\n                param: mode_params[j]\n              });\n              j++;\n            } else {\n              modes.push({\n                mode: (add ? '+' : '-') + mode_string[i],\n                param: null\n              });\n            }\n\n        }\n      }\n\n      return modes;\n    }\n    /**\n     * Cache object for commands buffering data before emitting them\n     * eg.\n     * var cache = this.cache('userlist');\n     * cache.nicks = [];\n     * cache.destroy();\n     */\n\n  }, {\n    key: \"cache\",\n    value: function cache(id) {\n      var cache = this._caches[id];\n\n      if (!cache) {\n        var destroyCacheFn = function destroyCacheFn(cacheToDestroy, idInCache) {\n          return function () {\n            delete cacheToDestroy[idInCache];\n          };\n        }; // We don't want the destoryCache to be iterable\n\n\n        cache = Object.defineProperty({}, 'destroy', {\n          enumerable: false,\n          configurable: false,\n          value: destroyCacheFn(this._caches, id)\n        });\n        this._caches[id] = cache;\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"hasCache\",\n    value: function hasCache(id) {\n      return this._caches && Object.prototype.hasOwnProperty.call(this._caches, id);\n    }\n  }, {\n    key: \"resetCache\",\n    value: function resetCache() {\n      this._caches = Object.create(null);\n    }\n  }]);\n\n  return IrcCommandHandler;\n}(EventEmitter);","'use strict';\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.parse-int\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nvar _ = {\n  each: require('lodash/each')\n};\n\nvar Helpers = require('../../helpers');\n\nvar handlers = {\n  RPL_CHANNELMODEIS: function RPL_CHANNELMODEIS(command, handler) {\n    var channel = command.params[1];\n    var raw_modes = command.params[2];\n    var raw_params = command.params.slice(3);\n    var modes = handler.parseModeList(raw_modes, raw_params);\n    handler.emit('channel info', {\n      channel: channel,\n      modes: modes,\n      raw_modes: raw_modes,\n      raw_params: raw_params,\n      tags: command.tags\n    });\n  },\n  RPL_CREATIONTIME: function RPL_CREATIONTIME(command, handler) {\n    var channel = command.params[1];\n    handler.emit('channel info', {\n      channel: channel,\n      created_at: parseInt(command.params[2], 10),\n      tags: command.tags\n    });\n  },\n  RPL_CHANNEL_URL: function RPL_CHANNEL_URL(command, handler) {\n    var channel = command.params[1];\n    handler.emit('channel info', {\n      channel: channel,\n      url: command.params[command.params.length - 1],\n      tags: command.tags\n    });\n  },\n  RPL_NAMEREPLY: function RPL_NAMEREPLY(command, handler) {\n    var members = command.params[command.params.length - 1].split(' ');\n    var cache = handler.cache('names.' + command.params[2]);\n\n    if (!cache.members) {\n      cache.members = [];\n    }\n\n    _.each(members, function (member) {\n      if (!member) {\n        return;\n      }\n\n      var j = 0;\n      var modes = [];\n      var user = null; // If we have prefixes, strip them from the nick and keep them separate\n\n      if (handler.network.options.PREFIX) {\n        for (j = 0; j < handler.network.options.PREFIX.length; j++) {\n          if (member[0] === handler.network.options.PREFIX[j].symbol) {\n            modes.push(handler.network.options.PREFIX[j].mode);\n            member = member.substring(1);\n          }\n        }\n      } // We may have a full user mask if the userhost-in-names CAP is enabled\n\n\n      user = Helpers.parseMask(member);\n      cache.members.push({\n        nick: user.nick,\n        ident: user.user,\n        hostname: user.host,\n        modes: modes,\n        tags: command.tags\n      });\n    });\n  },\n  RPL_ENDOFNAMES: function RPL_ENDOFNAMES(command, handler) {\n    var cache = handler.cache('names.' + command.params[1]);\n    handler.emit('userlist', {\n      channel: command.params[1],\n      users: cache.members || []\n    });\n    cache.destroy();\n  },\n  RPL_INVITELIST: function RPL_INVITELIST(command, handler) {\n    var cache = handler.cache('inviteList.' + command.params[1]);\n\n    if (!cache.invites) {\n      cache.invites = [];\n    }\n\n    cache.invites.push({\n      channel: command.params[1],\n      invited: command.params[2],\n      invited_by: command.params[3],\n      invited_at: command.params[4],\n      tags: command.tags\n    });\n  },\n  RPL_ENDOFINVITELIST: function RPL_ENDOFINVITELIST(command, handler) {\n    var cache = handler.cache('inviteList.' + command.params[1]);\n    handler.emit('inviteList', {\n      channel: command.params[1],\n      invites: cache.invites || []\n    });\n    cache.destroy();\n  },\n  RPL_BANLIST: function RPL_BANLIST(command, handler) {\n    var cache = handler.cache('banlist.' + command.params[1]);\n\n    if (!cache.bans) {\n      cache.bans = [];\n    }\n\n    cache.bans.push({\n      channel: command.params[1],\n      banned: command.params[2],\n      banned_by: command.params[3],\n      banned_at: command.params[4],\n      tags: command.tags\n    });\n  },\n  RPL_ENDOFBANLIST: function RPL_ENDOFBANLIST(command, handler) {\n    var cache = handler.cache('banlist.' + command.params[1]);\n    handler.emit('banlist', {\n      channel: command.params[1],\n      bans: cache.bans || []\n    });\n    cache.destroy();\n  },\n  RPL_TOPIC: function RPL_TOPIC(command, handler) {\n    handler.emit('topic', {\n      channel: command.params[1],\n      topic: command.params[command.params.length - 1],\n      tags: command.tags\n    });\n  },\n  RPL_NOTOPIC: function RPL_NOTOPIC(command, handler) {\n    handler.emit('topic', {\n      channel: command.params[1],\n      topic: '',\n      tags: command.tags\n    });\n  },\n  RPL_TOPICWHOTIME: function RPL_TOPICWHOTIME(command, handler) {\n    var parsed = Helpers.parseMask(command.params[2]);\n    handler.emit('topicsetby', {\n      nick: parsed.nick,\n      ident: parsed.user,\n      hostname: parsed.host,\n      channel: command.params[1],\n      when: command.params[3],\n      tags: command.tags\n    });\n  },\n  JOIN: function JOIN(command, handler) {\n    var channel;\n    var gecos_idx = 1;\n    var data = {};\n\n    if (typeof command.params[0] === 'string' && command.params[0] !== '') {\n      channel = command.params[0];\n    }\n\n    if (handler.network.cap.isEnabled('extended-join')) {\n      data.account = command.params[1] === '*' ? false : command.params[1];\n      gecos_idx = 2;\n    }\n\n    data.nick = command.nick;\n    data.ident = command.ident;\n    data.hostname = command.hostname;\n    data.gecos = command.params[gecos_idx] || '';\n    data.channel = channel;\n    data.time = command.getServerTime();\n    data.tags = command.tags;\n    handler.emit('join', data);\n  },\n  PART: function PART(command, handler) {\n    var time = command.getServerTime();\n    handler.emit('part', {\n      nick: command.nick,\n      ident: command.ident,\n      hostname: command.hostname,\n      channel: command.params[0],\n      message: command.params[command.params.length - 1] || '',\n      time: time,\n      tags: command.tags\n    });\n  },\n  KICK: function KICK(command, handler) {\n    var time = command.getServerTime();\n    handler.emit('kick', {\n      kicked: command.params[1],\n      nick: command.nick,\n      ident: command.ident,\n      hostname: command.hostname,\n      channel: command.params[0],\n      message: command.params[command.params.length - 1] || '',\n      time: time,\n      tags: command.tags\n    });\n  },\n  QUIT: function QUIT(command, handler) {\n    var time = command.getServerTime();\n    handler.emit('quit', {\n      nick: command.nick,\n      ident: command.ident,\n      hostname: command.hostname,\n      message: command.params[command.params.length - 1] || '',\n      time: time,\n      tags: command.tags\n    });\n  },\n  TOPIC: function TOPIC(command, handler) {\n    // If we don't have an associated channel, no need to continue\n    if (!command.params[0]) {\n      return;\n    } // Check if we have a server-time\n\n\n    var time = command.getServerTime();\n    var channel = command.params[0];\n    var topic = command.params[command.params.length - 1] || '';\n    handler.emit('topic', {\n      nick: command.nick,\n      channel: channel,\n      topic: topic,\n      time: time,\n      tags: command.tags\n    });\n  },\n  INVITE: function INVITE(command, handler) {\n    var time = command.getServerTime();\n    handler.emit('invite', {\n      nick: command.nick,\n      ident: command.ident,\n      hostname: command.hostname,\n      invited: command.params[0],\n      channel: command.params[1],\n      time: time,\n      tags: command.tags\n    });\n  },\n  RPL_INVITING: function RPL_INVITING(command, handler) {\n    handler.emit('invited', {\n      nick: command.params[0],\n      channel: command.params[1],\n      tags: command.tags\n    });\n  }\n};\n\nmodule.exports = function AddCommandHandlers(command_controller) {\n  _.each(handlers, function (handler, handler_command) {\n    command_controller.addHandler(handler_command, handler);\n  });\n};","'use strict';\n/*\n\nGeneric IRC events. Simply passing selected IRC params into javascript objects\n\nExample\n    ERROR: {              IRC Command to match\n        event: 'error',   Event name to trigger on the cleint instance\n        reason: -1        Property on the triggered event, and which IRC param to should contain\n    },\n*/\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nvar generics = {\n  ERROR: {\n    event: 'irc error',\n    error: 'irc',\n    reason: -1\n  },\n  ERR_PASSWDMISMATCH: {\n    event: 'irc error',\n    error: 'password_mismatch'\n  },\n  ERR_LINKCHANNEL: {\n    event: 'channel_redirect',\n    from: 1,\n    to: 2\n  },\n  ERR_NOSUCHNICK: {\n    event: 'irc error',\n    error: 'no_such_nick',\n    nick: 1,\n    reason: -1\n  },\n  ERR_CANNOTSENDTOCHAN: {\n    event: 'irc error',\n    error: 'cannot_send_to_channel',\n    channel: 1,\n    reason: -1\n  },\n  ERR_TOOMANYCHANNELS: {\n    event: 'irc error',\n    error: 'too_many_channels',\n    channel: 1,\n    reason: -1\n  },\n  ERR_USERNOTINCHANNEL: {\n    event: 'irc error',\n    error: 'user_not_in_channel',\n    nick: 0,\n    channel: 1,\n    reason: -1\n  },\n  ERR_NOTONCHANNEL: {\n    event: 'irc error',\n    error: 'not_on_channel',\n    channel: 1,\n    reason: -1\n  },\n  ERR_USERONCHANNEL: {\n    event: 'irc error',\n    error: 'user_on_channel',\n    nick: 1,\n    channel: 2\n  },\n  ERR_CHANNELISFULL: {\n    event: 'irc error',\n    error: 'channel_is_full',\n    channel: 1,\n    reason: -1\n  },\n  ERR_INVITEONLYCHAN: {\n    event: 'irc error',\n    error: 'invite_only_channel',\n    channel: 1,\n    reason: -1\n  },\n  ERR_BANNEDFROMCHAN: {\n    event: 'irc error',\n    error: 'banned_from_channel',\n    channel: 1,\n    reason: -1\n  },\n  ERR_BADCHANNELKEY: {\n    event: 'irc error',\n    error: 'bad_channel_key',\n    channel: 1,\n    reason: -1\n  },\n  ERR_CHANOPRIVSNEEDED: {\n    event: 'irc error',\n    error: 'chanop_privs_needed',\n    channel: 1,\n    reason: -1\n  },\n  ERR_UNKNOWNCOMMAND: {\n    event: 'irc error',\n    error: 'unknown_command',\n    command: 1,\n    reason: -1\n  }\n};\nvar generic_keys = Object.keys(generics);\n\nmodule.exports = function AddCommandHandlers(command_controller) {\n  generic_keys.forEach(function (generic_command) {\n    var generic = generics[generic_command];\n    command_controller.addHandler(generic_command, function (command, handler) {\n      var event_obj = {};\n      var event_keys = Object.keys(generic);\n      var val;\n\n      for (var i = 0; i < event_keys.length; i++) {\n        if (event_keys[i] === 'event') {\n          continue;\n        }\n\n        val = generic[event_keys[i]];\n\n        if (typeof val === 'string') {\n          event_obj[event_keys[i]] = val;\n        } else if (val >= 0) {\n          event_obj[event_keys[i]] = command.params[val];\n        } else if (val < 0) {\n          event_obj[event_keys[i]] = command.params[command.params.length + val];\n        }\n      }\n\n      if (event_obj.channel) {\n        // Extract the group from any errors targetted towards channels with a statusmsg prefix\n        // Eg. @#channel\n        var parsed = handler.network.extractTargetGroup(event_obj.channel);\n\n        if (parsed) {\n          event_obj.channel = parsed.target;\n          event_obj.target_group = parsed.target_group;\n        }\n      }\n\n      handler.emit(generic.event, event_obj);\n    });\n  });\n};","'use strict';\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nvar _ = {\n  each: require('lodash/each'),\n  find: require('lodash/find')\n};\n\nvar util = require('util');\n\nvar handlers = {\n  NOTICE: function NOTICE(command, handler) {\n    var time = command.getServerTime();\n    var message = command.params[command.params.length - 1];\n    var target = command.params[0];\n    var target_group;\n\n    if (message.charAt(0) === '\\x01' && message.charAt(message.length - 1) === '\\x01') {\n      // It's a CTCP response\n      handler.emit('ctcp response', {\n        nick: command.nick,\n        ident: command.ident,\n        hostname: command.hostname,\n        target: target,\n        type: (message.substring(1, message.length - 1).split(' ') || [null])[0],\n        message: message.substring(1, message.length - 1),\n        time: time,\n        tags: command.tags\n      });\n    } else {\n      var parsed_target = handler.network.extractTargetGroup(target);\n\n      if (parsed_target) {\n        target = parsed_target.target;\n        target_group = parsed_target.target_group;\n      }\n\n      handler.emit('notice', {\n        from_server: !command.nick,\n        nick: command.nick,\n        ident: command.ident,\n        hostname: command.hostname,\n        target: target,\n        group: target_group,\n        message: message,\n        tags: command.tags,\n        time: time,\n        account: command.getTag('account')\n      });\n    }\n  },\n  PRIVMSG: function PRIVMSG(command, handler) {\n    var time = command.getServerTime();\n    var message = command.params[command.params.length - 1];\n    var target = command.params[0];\n    var target_group;\n    var parsed_target = handler.network.extractTargetGroup(target);\n\n    if (parsed_target) {\n      target = parsed_target.target;\n      target_group = parsed_target.target_group;\n    }\n\n    if (message.charAt(0) === '\\x01' && message.charAt(message.length - 1) === '\\x01') {\n      // CTCP request\n      var ctcp_command = message.slice(1, -1).split(' ')[0].toUpperCase();\n\n      if (ctcp_command === 'ACTION') {\n        handler.emit('action', {\n          from_server: !command.nick,\n          nick: command.nick,\n          ident: command.ident,\n          hostname: command.hostname,\n          target: target,\n          group: target_group,\n          message: message.substring(8, message.length - 1),\n          tags: command.tags,\n          time: time,\n          account: command.getTag('account')\n        });\n      } else if (ctcp_command === 'VERSION' && handler.connection.options.version) {\n        handler.connection.write(util.format('NOTICE %s :\\x01VERSION %s\\x01', command.nick, handler.connection.options.version));\n      } else {\n        handler.emit('ctcp request', {\n          from_server: !command.nick,\n          nick: command.nick,\n          ident: command.ident,\n          hostname: command.hostname,\n          target: target,\n          group: target_group,\n          type: ctcp_command || null,\n          message: message.substring(1, message.length - 1),\n          time: time,\n          account: command.getTag('account'),\n          tags: command.tags\n        });\n      }\n    } else {\n      handler.emit('privmsg', {\n        from_server: !command.nick,\n        nick: command.nick,\n        ident: command.ident,\n        hostname: command.hostname,\n        target: target,\n        group: target_group,\n        message: message,\n        tags: command.tags,\n        time: time,\n        account: command.getTag('account')\n      });\n    }\n  },\n  TAGMSG: function TAGMSG(command, handler) {\n    var time = command.getServerTime();\n    var target = command.params[0];\n    handler.emit('tagmsg', {\n      from_server: !command.nick,\n      nick: command.nick,\n      ident: command.ident,\n      hostname: command.hostname,\n      target: target,\n      tags: command.tags,\n      time: time\n    });\n  },\n  RPL_WALLOPS: function RPL_WALLOPS(command, handler) {\n    handler.emit('wallops', {\n      from_server: false,\n      nick: command.nick,\n      ident: command.ident,\n      hostname: command.hostname,\n      message: command.params[command.params.length - 1],\n      account: command.getTag('account'),\n      tags: command.tags\n    });\n  }\n};\n\nmodule.exports = function AddCommandHandlers(command_controller) {\n  _.each(handlers, function (handler, handler_command) {\n    command_controller.addHandler(handler_command, handler);\n  });\n};","'use strict';\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.index-of\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.splice\");\n\nrequire(\"core-js/modules/es.parse-int\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nvar _ = {\n  each: require('lodash/each'),\n  clone: require('lodash/clone'),\n  map: require('lodash/map')\n};\nvar handlers = {\n  RPL_LISTSTART: function RPL_LISTSTART(command, handler) {\n    var cache = getChanListCache(handler);\n    cache.channels = [];\n    handler.emit('channel list start');\n  },\n  RPL_LISTEND: function RPL_LISTEND(command, handler) {\n    var cache = getChanListCache(handler);\n\n    if (cache.channels.length) {\n      handler.emit('channel list', cache.channels);\n      cache.channels = [];\n    }\n\n    cache.destroy();\n    handler.emit('channel list end');\n  },\n  RPL_LIST: function RPL_LIST(command, handler) {\n    var cache = getChanListCache(handler);\n    cache.channels.push({\n      channel: command.params[1],\n      num_users: parseInt(command.params[2], 10),\n      topic: command.params[3] || '',\n      tags: command.tags\n    });\n\n    if (cache.channels.length >= 50) {\n      handler.emit('channel list', cache.channels);\n      cache.channels = [];\n    }\n  },\n  RPL_MOTD: function RPL_MOTD(command, handler) {\n    var cache = handler.cache('motd');\n    cache.motd += command.params[command.params.length - 1] + '\\n';\n  },\n  RPL_MOTDSTART: function RPL_MOTDSTART(command, handler) {\n    var cache = handler.cache('motd');\n    cache.motd = '';\n  },\n  RPL_ENDOFMOTD: function RPL_ENDOFMOTD(command, handler) {\n    var cache = handler.cache('motd');\n    handler.emit('motd', {\n      motd: cache.motd,\n      tags: command.tags\n    });\n    cache.destroy();\n  },\n  ERR_NOMOTD: function ERR_NOMOTD(command, handler) {\n    var params = _.clone(command.params);\n\n    params.shift();\n    handler.emit('motd', {\n      error: command.params[command.params.length - 1],\n      tags: command.tags\n    });\n  },\n  RPL_WHOREPLY: function RPL_WHOREPLY(command, handler) {\n    var cache = handler.cache('who');\n\n    if (!cache.members) {\n      cache.members = [];\n    }\n\n    var params = command.params; // G = Gone, H = Here\n\n    var is_away = params[6][0].toUpperCase() === 'G'; // get user channel modes\n\n    var net_prefixes = handler.network.options.PREFIX; // filter PREFIX array against the prefix's in who reply returning matched PREFIX objects\n\n    var chan_prefixes = net_prefixes.filter(function (f) {\n      return params[6].indexOf(f.symbol) > -1;\n    }); // use _.map to return an array of mode strings from matched PREFIX objects\n\n    var chan_modes = _.map(chan_prefixes, 'mode');\n\n    var hops_away = 0;\n    var realname = params[7]; // The realname should be in the format of \"<num hops> <real name>\"\n\n    var space_idx = realname.indexOf(' ');\n\n    if (space_idx > -1) {\n      hops_away = parseInt(realname.substr(0, space_idx), 10);\n      realname = realname.substr(space_idx + 1);\n    }\n\n    cache.members.push({\n      nick: params[5],\n      ident: params[2],\n      hostname: params[3],\n      server: params[4],\n      real_name: realname,\n      away: is_away,\n      num_hops_away: hops_away,\n      channel: params[1],\n      channel_modes: chan_modes,\n      tags: command.tags\n    });\n  },\n  RPL_WHOSPCRPL: function RPL_WHOSPCRPL(command, handler) {\n    var cache = handler.cache('who');\n\n    if (!cache.members) {\n      cache.members = [];\n    }\n\n    var params = command.params; // G = Gone, H = Here\n\n    var is_away = params[6][0].toUpperCase() === 'G'; // get user channel modes\n\n    var net_prefixes = handler.network.options.PREFIX; // filter PREFIX array against the prefix's in who reply returning matched PREFIX objects\n\n    var chan_prefixes = net_prefixes.filter(function (f) {\n      return params[6].indexOf(f.symbol) > -1;\n    }); // use _.map to return an array of mode strings from matched PREFIX objects\n\n    var chan_modes = _.map(chan_prefixes, 'mode'); // Some ircd's use n/a for no level, unify them all to 0 for no level\n\n\n    var op_level = !/^[0-9]+$/.test(params[9]) ? 0 : parseInt(params[9], 10);\n    cache.members.push({\n      nick: params[5],\n      ident: params[2],\n      hostname: params[3],\n      server: params[4],\n      op_level: op_level,\n      real_name: params[10],\n      account: params[8] === '0' ? '' : params[8],\n      away: is_away,\n      num_hops_away: parseInt(params[7], 10),\n      channel: params[1],\n      channel_modes: chan_modes,\n      tags: command.tags\n    });\n  },\n  RPL_ENDOFWHO: function RPL_ENDOFWHO(command, handler) {\n    var cache = handler.cache('who');\n    handler.emit('wholist', {\n      target: command.params[1],\n      users: cache.members || []\n    });\n    cache.destroy();\n  },\n  PING: function PING(command, handler) {\n    handler.connection.write('PONG ' + command.params[command.params.length - 1]);\n  },\n  PONG: function PONG(command, handler) {\n    var time = command.getServerTime();\n\n    if (time) {\n      handler.network.addServerTimeOffset(time);\n    }\n\n    handler.emit('pong', {\n      message: command.params[1],\n      time: time,\n      tags: command.tags\n    });\n  },\n  MODE: function MODE(command, handler) {\n    // Check if we have a server-time\n    var time = command.getServerTime(); // Get a JSON representation of the modes\n\n    var raw_modes = command.params[1];\n    var raw_params = command.params.slice(2);\n    var modes = handler.parseModeList(raw_modes, raw_params);\n    handler.emit('mode', {\n      target: command.params[0],\n      nick: command.nick || command.prefix || '',\n      modes: modes,\n      time: time,\n      raw_modes: raw_modes,\n      raw_params: raw_params,\n      tags: command.tags\n    });\n  },\n  RPL_LINKS: function RPL_LINKS(command, handler) {\n    var cache = handler.cache('links');\n    cache.links = cache.links || [];\n    cache.links.push({\n      address: command.params[1],\n      access_via: command.params[2],\n      hops: parseInt(command.params[3].split(' ')[0]),\n      description: command.params[3].split(' ').splice(1).join(' '),\n      tags: command.tags\n    });\n  },\n  RPL_ENDOFLINKS: function RPL_ENDOFLINKS(command, handler) {\n    var cache = handler.cache('links');\n    handler.emit('server links', {\n      links: cache.links\n    });\n    cache.destroy();\n  },\n  RPL_INFO: function RPL_INFO(command, handler) {\n    var cache = handler.cache('info');\n\n    if (!cache.info) {\n      cache.info = '';\n    }\n\n    cache.info += command.params[command.params.length - 1] + '\\n';\n  },\n  RPL_ENDOFINFO: function RPL_ENDOFINFO(command, handler) {\n    var cache = handler.cache('info');\n    handler.emit('info', {\n      info: cache.info,\n      tags: command.tags\n    });\n    cache.destroy();\n  },\n  RPL_HELPSTART: function RPL_HELPSTART(command, handler) {\n    var cache = handler.cache('help');\n    cache.help = command.params[command.params.length - 1] + '\\n';\n  },\n  RPL_HELPTXT: function RPL_HELPTXT(command, handler) {\n    var cache = handler.cache('help');\n    cache.help += command.params[command.params.length - 1] + '\\n';\n  },\n  RPL_ENDOFHELP: function RPL_ENDOFHELP(command, handler) {\n    var cache = handler.cache('help');\n    handler.emit('help', {\n      help: cache.help,\n      tags: command.tags\n    });\n    cache.destroy();\n  },\n  BATCH: function BATCH(command, handler) {\n    var batch_start = command.params[0].substr(0, 1) === '+';\n    var batch_id = command.params[0].substr(1);\n    var cache_key = 'batch.' + batch_id;\n\n    if (!batch_id) {\n      return;\n    }\n\n    if (batch_start) {\n      var _cache = handler.cache(cache_key);\n\n      _cache.commands = [];\n      _cache.type = command.params[1];\n      _cache.params = command.params.slice(2);\n      return;\n    }\n\n    if (!handler.hasCache(cache_key)) {\n      // If we don't have this batch ID in cache, it either means that the\n      // server hasn't sent the starting batch command or that the server\n      // has already sent the end batch command.\n      return;\n    }\n\n    var cache = handler.cache(cache_key);\n    var emit_obj = {\n      id: batch_id,\n      type: cache.type,\n      params: cache.params,\n      commands: cache.commands\n    }; // Destroy the cache object before executing each command. If one\n    // errors out then we don't have the cache object stuck in memory.\n\n    cache.destroy();\n    handler.emit('batch start', emit_obj);\n    handler.emit('batch start ' + emit_obj.type, emit_obj);\n    emit_obj.commands.forEach(function (c) {\n      return handler.executeCommand(c);\n    });\n    handler.emit('batch end', emit_obj);\n    handler.emit('batch end ' + emit_obj.type, emit_obj);\n  }\n};\n\nmodule.exports = function AddCommandHandlers(command_controller) {\n  _.each(handlers, function (handler, handler_command) {\n    command_controller.addHandler(handler_command, handler);\n  });\n};\n\nfunction getChanListCache(handler) {\n  var cache = handler.cache('chanlist'); // fix some IRC networks\n\n  if (!cache.channels) {\n    cache.channels = [];\n  }\n\n  return cache;\n}","'use strict';\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.index-of\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.date.now\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.create\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.string.match\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nvar Helpers = require('../../helpers');\n\nvar _ = {\n  intersection: require('lodash/intersection'),\n  difference: require('lodash/difference'),\n  each: require('lodash/each'),\n  uniq: require('lodash/uniq')\n};\nvar handlers = {\n  RPL_WELCOME: function RPL_WELCOME(command, handler) {\n    var nick = command.params[0]; // Get the server name so we know which messages are by the server in future\n\n    handler.network.server = command.prefix;\n    handler.network.cap.negotiating = false; // We can't use the time given here as ZNC actually replays the time when it first connects\n    // to an IRC server, not now(). Send a PING so that we can get a reliable time from PONG\n\n    if (handler.network.cap.isEnabled('server-time')) {\n      // Ping to try get a server-time in its response as soon as possible\n      handler.connection.write('PING ' + Date.now());\n    }\n\n    handler.emit('registered', {\n      nick: nick,\n      tags: command.tags\n    });\n  },\n  RPL_YOURHOST: function RPL_YOURHOST(command, handler) {\n    // Your host is ircd.network.org, running version InspIRCd-2.0\n    var param = command.params[1] || '';\n    var m = param.match(/running version (.*)$/);\n\n    if (!m) {\n      handler.network.ircd = '';\n    } else {\n      handler.network.ircd = m[1];\n    }\n  },\n  RPL_ISUPPORT: function RPL_ISUPPORT(command, handler) {\n    var options = command.params;\n    var i;\n    var option;\n    var matches;\n    var j;\n\n    for (i = 1; i < options.length; i++) {\n      option = Helpers.splitOnce(options[i], '=');\n      option[0] = option[0].toUpperCase();\n      handler.network.options[option[0]] = typeof option[1] !== 'undefined' ? option[1] : true;\n\n      if (option[0] === 'PREFIX') {\n        matches = /\\(([^)]*)\\)(.*)/.exec(option[1]);\n\n        if (matches && matches.length === 3) {\n          handler.network.options.PREFIX = [];\n\n          for (j = 0; j < matches[2].length; j++) {\n            handler.network.options.PREFIX.push({\n              symbol: matches[2].charAt(j),\n              mode: matches[1].charAt(j)\n            });\n          }\n        }\n      } else if (option[0] === 'CHANTYPES') {\n        handler.network.options.CHANTYPES = handler.network.options.CHANTYPES.split('');\n      } else if (option[0] === 'STATUSMSG') {\n        handler.network.options.STATUSMSG = handler.network.options.STATUSMSG.split('');\n      } else if (option[0] === 'CHANMODES') {\n        handler.network.options.CHANMODES = option[1].split(',');\n      } else if (option[0] === 'NETWORK') {\n        handler.network.name = option[1];\n      } else if (option[0] === 'NAMESX' && !handler.network.cap.isEnabled('multi-prefix')) {\n        // Tell the server to send us all user modes in NAMES reply, not just\n        // the highest one\n        handler.connection.write('PROTOCTL NAMESX');\n      }\n    }\n\n    handler.emit('server options', {\n      options: handler.network.options,\n      cap: handler.network.cap.enabled,\n      tags: command.tags\n    });\n  },\n  CAP: function CAP(command, handler) {\n    var request_caps = [];\n    var capability_values = Object.create(null); // TODO: capability modifiers\n    // i.e. - for disable, ~ for requires ACK, = for sticky\n\n    var capabilities = command.params[command.params.length - 1].replace(/(?:^| )[-~=]/, '').split(' ').map(function (cap) {\n      // CAPs in 3.2 may be in the form of CAP=VAL. So seperate those out\n      var sep = cap.indexOf('=');\n\n      if (sep === -1) {\n        capability_values[cap] = '';\n        return cap;\n      }\n\n      var cap_name = cap.substr(0, sep);\n      var cap_value = cap.substr(sep + 1);\n      capability_values[cap_name] = cap_value;\n      return cap_name;\n    }); // Which capabilities we want to enable\n\n    var want = ['cap-notify', 'batch', 'multi-prefix', 'message-tags', 'draft/message-tags-0.2', 'away-notify', 'invite-notify', 'account-notify', 'account-tag', 'server-time', 'userhost-in-names', 'extended-join', 'znc.in/server-time-iso', 'znc.in/server-time']; // Optional CAPs depending on settings\n\n    var saslAuth = getSaslAuth(handler);\n\n    if (saslAuth || handler.connection.options.sasl_mechanism === 'EXTERNAL') {\n      want.push('sasl');\n    }\n\n    if (handler.connection.options.enable_chghost) {\n      want.push('chghost');\n    }\n\n    if (handler.connection.options.enable_setname) {\n      want.push('setname');\n    }\n\n    if (handler.connection.options.enable_echomessage) {\n      want.push('echo-message');\n    }\n\n    want = _.uniq(want.concat(handler.request_extra_caps));\n\n    switch (command.params[1]) {\n      case 'LS':\n        // Compute which of the available capabilities we want and request them\n        request_caps = _.intersection(capabilities, want);\n\n        if (request_caps.length > 0) {\n          handler.network.cap.requested = handler.network.cap.requested.concat(request_caps);\n        } // CAP 3.2 multline support. Only send our CAP requests on the last CAP LS\n        // line which will not have * set for params[2]\n\n\n        if (command.params[2] !== '*') {\n          if (handler.network.cap.requested.length > 0) {\n            handler.network.cap.negotiating = true;\n            handler.connection.write('CAP REQ :' + handler.network.cap.requested.join(' '));\n          } else {\n            handler.connection.write('CAP END');\n            handler.network.cap.negotiating = false;\n          }\n        }\n\n        break;\n\n      case 'ACK':\n        if (capabilities.length > 0) {\n          // Update list of enabled capabilities\n          handler.network.cap.enabled = _.uniq(handler.network.cap.enabled.concat(capabilities)); // Update list of capabilities we would like to have but that aren't enabled\n\n          handler.network.cap.requested = _.difference(handler.network.cap.requested, capabilities);\n        }\n\n        if (handler.network.cap.negotiating) {\n          if (handler.network.cap.isEnabled('sasl')) {\n            if (typeof handler.connection.options.sasl_mechanism === 'string') {\n              handler.connection.write('AUTHENTICATE ' + handler.connection.options.sasl_mechanism);\n            } else {\n              handler.connection.write('AUTHENTICATE PLAIN');\n            }\n          } else if (handler.network.cap.requested.length === 0) {\n            // If all of our requested CAPs have been handled, end CAP negotiation\n            handler.connection.write('CAP END');\n            handler.network.cap.negotiating = false;\n          }\n        }\n\n        break;\n\n      case 'NAK':\n        if (capabilities.length > 0) {\n          handler.network.cap.requested = _.difference(handler.network.cap.requested, capabilities);\n        } // If all of our requested CAPs have been handled, end CAP negotiation\n\n\n        if (handler.network.cap.negotiating && handler.network.cap.requested.length === 0) {\n          handler.connection.write('CAP END');\n          handler.network.cap.negotiating = false;\n        }\n\n        break;\n\n      case 'LIST':\n        // should we do anything here?\n        break;\n\n      case 'NEW':\n        // Request any new CAPs that we want but haven't already enabled\n        request_caps = [];\n\n        for (var i = 0; i < capabilities.length; i++) {\n          var cap = capabilities[i];\n\n          if (want.indexOf(cap) > -1 && request_caps.indexOf(cap) === -1 && !handler.network.cap.isEnabled(cap)) {\n            handler.network.cap.requested.push(cap);\n            request_caps.push(cap);\n          }\n        }\n\n        handler.connection.write('CAP REQ :' + request_caps.join(' '));\n        break;\n\n      case 'DEL':\n        // Update list of enabled capabilities\n        handler.network.cap.enabled = _.difference(handler.network.cap.enabled, capabilities);\n        break;\n    }\n\n    handler.emit('cap ' + command.params[1].toLowerCase(), {\n      command: command.params[1],\n      capabilities: capability_values\n    });\n  },\n  AUTHENTICATE: function AUTHENTICATE(command, handler) {\n    if (command.params[0] !== '+') {\n      if (handler.network.cap.negotiating) {\n        handler.connection.write('CAP END');\n        handler.network.cap.negotiating = false;\n      }\n\n      return;\n    } // Send blank authenticate for EXTERNAL mechanism\n\n\n    if (handler.connection.options.sasl_mechanism === 'EXTERNAL') {\n      handler.connection.write('AUTHENTICATE +');\n      return;\n    }\n\n    var saslAuth = getSaslAuth(handler);\n    var auth_str = saslAuth.account + '\\0' + saslAuth.account + '\\0' + saslAuth.password;\n    var b = Buffer.from(auth_str, 'utf8');\n    var b64 = b.toString('base64');\n\n    while (b64.length >= 400) {\n      handler.connection.write('AUTHENTICATE ' + b64.slice(0, 399));\n      b64 = b64.slice(399);\n    }\n\n    if (b64.length > 0) {\n      handler.connection.write('AUTHENTICATE ' + b64);\n    } else {\n      handler.connection.write('AUTHENTICATE +');\n    }\n  },\n  RPL_LOGGEDIN: function RPL_LOGGEDIN(command, handler) {\n    if (handler.network.cap.negotiating === true) {\n      handler.connection.write('CAP END');\n      handler.network.cap.negotiating = false;\n    }\n\n    var mask = Helpers.parseMask(command.params[1]); // Check if we have a server-time\n\n    var time = command.getServerTime();\n    handler.emit('loggedin', {\n      nick: command.params[0],\n      ident: mask.user,\n      hostname: mask.host,\n      account: command.params[2],\n      time: time,\n      tags: command.tags\n    });\n    handler.emit('account', {\n      nick: command.params[0],\n      ident: mask.user,\n      hostname: mask.host,\n      account: command.params[2],\n      time: time,\n      tags: command.tags\n    });\n  },\n  RPL_LOGGEDOUT: function RPL_LOGGEDOUT(command, handler) {\n    var mask = Helpers.parseMask(command.params[1]); // Check if we have a server-time\n\n    var time = command.getServerTime();\n    handler.emit('loggedout', {\n      nick: command.params[0],\n      ident: mask.user,\n      hostname: mask.host,\n      account: false,\n      time: time,\n      tags: command.tags\n    });\n    handler.emit('account', {\n      nick: command.params[0],\n      ident: mask.user,\n      hostname: mask.host,\n      account: false,\n      time: time,\n      tags: command.tags\n    });\n  },\n  RPL_SASLLOGGEDIN: function RPL_SASLLOGGEDIN(command, handler) {\n    if (handler.network.cap.negotiating === true) {\n      handler.connection.write('CAP END');\n      handler.network.cap.negotiating = false;\n    }\n  },\n  ERR_SASLNOTAUTHORISED: function ERR_SASLNOTAUTHORISED(command, handler) {\n    if (handler.network.cap.negotiating) {\n      handler.connection.write('CAP END');\n      handler.network.cap.negotiating = false;\n    }\n  },\n  ERR_SASLABORTED: function ERR_SASLABORTED(command, handler) {\n    if (handler.network.cap.negotiating) {\n      handler.connection.write('CAP END');\n      handler.network.cap.negotiating = false;\n    }\n  },\n  ERR_SASLALREADYAUTHED: function ERR_SASLALREADYAUTHED(command, handler) {// noop\n  }\n};\n/**\n * Only use the nick+password combo if an account has not been specifically given.\n * If an account:{account,password} has been given, use it for SASL auth.\n */\n\nfunction getSaslAuth(handler) {\n  var options = handler.connection.options;\n\n  if (options.account && options.account.account) {\n    // An account username has been given, use it for SASL auth\n    return {\n      account: options.account.account,\n      password: options.account.password || ''\n    };\n  } else if (options.account) {\n    // An account object existed but without auth credentials\n    return null;\n  } else if (options.password) {\n    // No account credentials found but we have a server password. Also use it for SASL\n    // for ease of use\n    return {\n      account: options.nick,\n      password: options.password\n    };\n  }\n\n  return null;\n}\n\nmodule.exports = function AddCommandHandlers(command_controller) {\n  _.each(handlers, function (handler, handler_command) {\n    command_controller.addHandler(handler_command, handler);\n  });\n};"],"sourceRoot":""}